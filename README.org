* Get started
** bluepill
*** Weird power issue
    doesn't work if stm32 connected by itself, works if ground is connected to rpi group (???)
** Software
   - openocd
   - gcc-arm-none-eabi
** CKS32 bluepill clone
   copy openocd files to:
   /usr/share/openocd/scripts/target/cs32f1x.cfg
   /usr/share/openocd/scripts/board/cs32f103c8t6.cfg

** Make and flash
   Connect st-link

   make -C my-project
   make flash -C my-project
** Debug
   start openocd:
   openocd -f /usr/share/openocd/scripts/board/cs32f103c8t6.cfg

   connect to it via gdb:
   gdb-multiarch --eval-command="target remote localhost:3333" my-project/your-file.elf

   You can also connect to openocd via 'telnet localhost 4444' and send some commands to it
* Hardware
** LED - PWM - STM32 - (slave) SPI (master) - something
** ESP8266 - SPI - STM32
** Raspberry Pi - SPI - STM32
* Software
** SPI interface
   msg_type
   size
   payload
*** have the same interface for setting/getting config and leds?
*** allow to just write memory?
*** Messages
    - set one led
    - set all leds
    - set some configuration?
    - get led value?
    - get configuration value(s)
** ESP WiFi interface
*** Same as SPI over UDP
*** OSC
* stm32 notes
** Timers
*** General
    Clock / Prescaler / ARR = timer frequency

    clock / desired timer frequency = prescaler * ARR

*** timer prescaler
    timer_set_prescaler
    TIM_PSC

    divides the clock
*** period / auto reload
    timer_set_period
    ARR

    sets timer ?
*** output compare
    - TIM_OC?: Output Compare channel
    - TIM_OC?N: ?
* TODOs
** TODO SPI both ways - make slave return its state
   - Add another message type to only receive the state, not change it
** TODO UDP server (just have an stdin pipe to STM32 + nc?)
`
** TODO print debugging info to UART
